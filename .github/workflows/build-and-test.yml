name: Build and Test Unify Core

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=12 -Dkotlin.incremental=true -Dorg.gradle.caching=true -Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dorg.gradle.jvmargs="-Xmx4g -XX:+UseParallelGC" -Dkotlin.daemon.jvm.options="-Xmx2g"
  JAVA_VERSION: 17
  NODE_VERSION: 18
  KOTLIN_VERSION: 2.0.21
  GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: true
  # 优化缓存配置
  GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX: v2
  GRADLE_BUILD_ACTION_CACHE_WRITE_ONLY: false

jobs:
  validate:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

  test-common:
    name: Test Common Code
    runs-on: ubuntu-latest
    needs: validate
    timeout-minutes: 25
    strategy:
      fail-fast: false
      matrix:
        test-group: [unit, integration]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          cache-write-only: false
          gradle-home-cache-includes: |
            caches
            notifications
            wrapper
          gradle-home-cache-excludes: |
            caches/*/tmp
            caches/*/locks

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/native
            ~/.konan
            ~/.m2/repository
            build-cache
            .gradle/
          key: ${{ env.GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX }}-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/libs.versions.toml') }}
          restore-keys: |
            ${{ env.GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX }}-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/libs.versions.toml') }}
            ${{ env.GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX }}-${{ runner.os }}-gradle-
            v1-${{ runner.os }}-gradle-

      - name: Run common tests
        run: |
          if [ "${{ matrix.test-group }}" = "unit" ]; then
            ./gradlew shared:testDebugUnitTest --stacktrace --parallel --build-cache --continue
          else
            ./gradlew shared:testIntegration --stacktrace --parallel --build-cache --continue || true
          fi
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-common
          path: shared/build/reports/tests/

  test-android:
    name: Test Android
    runs-on: ubuntu-latest
    needs: validate
    timeout-minutes: 35
    strategy:
      fail-fast: false
      matrix:
        api-level: [28, 33]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          cache-write-only: false
          gradle-home-cache-includes: |
            caches
            notifications
            wrapper
          gradle-home-cache-excludes: |
            caches/*/tmp
            caches/*/locks

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/native
            ~/.konan
            ~/.m2/repository
            build-cache
            .gradle/
          key: ${{ env.GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX }}-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/libs.versions.toml') }}
          restore-keys: |
            ${{ env.GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX }}-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/libs.versions.toml') }}
            ${{ env.GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX }}-${{ runner.os }}-gradle-
            v1-${{ runner.os }}-gradle-

      - name: Run Android tests
        run: ./gradlew androidApp:testDebugUnitTest --stacktrace --parallel --build-cache --continue
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}
          ANDROID_API_LEVEL: ${{ matrix.api-level }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-test-results
          path: androidApp/build/reports/tests/

  quality-check:
    name: Code Quality Check
    runs-on: ubuntu-latest
    needs: validate
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        check-type: [detekt, ktlint]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          cache-write-only: false
          gradle-home-cache-includes: |
            caches
            notifications
            wrapper
          gradle-home-cache-excludes: |
            caches/*/tmp
            caches/*/locks

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/native
            ~/.konan
            ~/.m2/repository
            build-cache
            .gradle/
          key: ${{ env.GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX }}-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/libs.versions.toml') }}
          restore-keys: |
            ${{ env.GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX }}-${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/libs.versions.toml') }}
            ${{ env.GRADLE_BUILD_ACTION_CACHE_KEY_PREFIX }}-${{ runner.os }}-gradle-
            v1-${{ runner.os }}-gradle-

      - name: Run Quality Checks
        run: |
          if [ "${{ matrix.check-type }}" = "detekt" ]; then
            ./gradlew detekt --parallel --build-cache --continue
          else
            ./gradlew ktlintCheck --parallel --build-cache --continue
          fi
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}

      - name: Upload Quality Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: quality-reports-${{ matrix.check-type }}
          path: |
            build/reports/detekt/
            build/reports/ktlint/

  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    needs: validate
    timeout-minutes: 20
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          cache-write-only: false
          gradle-home-cache-includes: |
            caches
            notifications
            wrapper
          gradle-home-cache-excludes: |
            caches/*/tmp
            caches/*/locks

      - name: Run performance tests
        run: ./scripts/performance-benchmark.sh

      - name: Upload performance reports
        uses: actions/upload-artifact@v4
        with:
          name: performance-reports
          path: performance-reports/



  test-ios:
    name: Test iOS
    runs-on: macos-13
    needs: validate
    timeout-minutes: 35
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          cache-write-only: false
          gradle-home-cache-includes: |
            caches
            notifications
            wrapper
          gradle-home-cache-excludes: |
            caches/*/tmp
            caches/*/locks
          
      - name: Cache Konan
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-konan-
            
      - name: Run iOS tests
        run: ./gradlew shared:iosSimulatorArm64Test --stacktrace --parallel --build-cache --continue
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ios-test-results
          path: shared/build/reports/tests/

  test-web:
    name: Test Web
    runs-on: ubuntu-latest
    needs: validate
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          cache-write-only: false
          gradle-home-cache-includes: |
            caches
            notifications
            wrapper
          gradle-home-cache-excludes: |
            caches/*/tmp
            caches/*/locks
          
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Run Web tests
        run: ./gradlew shared:jsTest --stacktrace --parallel --build-cache --continue
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}
        
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: web-test-results
          path: shared/build/reports/tests/

  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    needs: [test-common, test-android]
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        build-type: [debug, release]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          cache-write-only: false
          gradle-home-cache-includes: |
            caches
            notifications
            wrapper
          gradle-home-cache-excludes: |
            caches/*/tmp
            caches/*/locks
          
      - name: Build Android APK
        run: ./gradlew androidApp:assemble${{ matrix.build-type == 'release' && 'Release' || 'Debug' }} --stacktrace --parallel --build-cache --continue
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}
        
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ matrix.build-type }}
          path: androidApp/build/outputs/apk/**/*.apk

  build-ios:
    name: Build iOS
    runs-on: macos-13
    needs: [test-common, test-ios]
    timeout-minutes: 45
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          cache-write-only: false
          gradle-home-cache-includes: |
            caches
            notifications
            wrapper
          gradle-home-cache-excludes: |
            caches/*/tmp
            caches/*/locks
          
      - name: Cache Konan
        uses: actions/cache@v4
        with:
          path: ~/.konan
          key: ${{ runner.os }}-konan-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-konan-
            
      - name: Build iOS Framework
        run: ./gradlew shared:assembleXCFramework --stacktrace --parallel --build-cache --continue
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}
        
      - name: Upload iOS Framework
        uses: actions/upload-artifact@v4
        with:
          name: ios-framework
          path: shared/build/XCFrameworks/

  build-web:
    name: Build Web
    runs-on: ubuntu-latest
    needs: [test-common, test-web]
    timeout-minutes: 25
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          cache-write-only: false
          gradle-home-cache-includes: |
            caches
            notifications
            wrapper
          gradle-home-cache-excludes: |
            caches/*/tmp
            caches/*/locks
          
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Build Web App
        run: ./gradlew webApp:jsBrowserDistribution --stacktrace --parallel --build-cache --continue
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}
        
      - name: Upload Web Build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: webApp/build/distributions/

  build-desktop:
    name: Build Desktop
    runs-on: ubuntu-latest
    needs: [test-common]
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          cache-write-only: false
          gradle-home-cache-includes: |
            caches
            notifications
            wrapper
          gradle-home-cache-excludes: |
            caches/*/tmp
            caches/*/locks
          
      - name: Build Desktop App
        run: ./gradlew :desktopApp:packageUberJarForCurrentOS --stacktrace --parallel --build-cache --continue
        env:
          GRADLE_OPTS: ${{ env.GRADLE_OPTS }}
        
      - name: Upload Desktop Build
        uses: actions/upload-artifact@v4
        with:
          name: desktop-build
          path: desktopApp/build/compose/jars/*.jar


  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: validate
    timeout-minutes: 15
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    needs: validate
    timeout-minutes: 10
    if: github.event_name == 'schedule' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          cache-write-only: false
          gradle-home-cache-includes: |
            caches
            notifications
            wrapper
          gradle-home-cache-excludes: |
            caches/*/tmp
            caches/*/locks
          
      - name: Run dependency updates check
        run: ./gradlew dependencyUpdates --stacktrace
        
      - name: Upload dependency report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: dependency-updates
          path: build/dependencyUpdates/

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [build-android, build-web]
    timeout-minutes: 30
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-home-cache-cleanup: true
          cache-read-only: false
          cache-write-only: false
          gradle-home-cache-includes: |
            caches
            notifications
            wrapper
          gradle-home-cache-excludes: |
            caches/*/tmp
            caches/*/locks
          
      - name: Run integration tests
        run: ./gradlew integrationTest --stacktrace
        
      - name: Upload integration test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: integration-test-results
          path: build/reports/tests/integrationTest/

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-web, build-desktop, quality-check, security-scan]
    timeout-minutes: 15
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/') && !contains(github.ref, 'beta') && !contains(github.ref, 'alpha')
        with:
          files: |
            android-apk/*.apk
            ios-framework/**/*
            web-build/**/*
            desktop-build/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: [build-android, build-ios, build-web, build-desktop, quality-check, security-scan]
    timeout-minutes: 5
    if: always() && (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
      - name: Notify Success
        if: ${{ needs.build-android.result == 'success' && needs.build-ios.result == 'success' && needs.build-web.result == 'success' && needs.build-desktop.result == 'success' }}
        run: |
          echo "✅ All builds completed successfully!"
          echo "- Android APK: Built"
          echo "- iOS Framework: Built" 
          echo "- Web Application: Built"
          echo "- Desktop App: Built"
          echo "- Code Quality: Passed"
          echo "- Security Scan: Completed"
          
      - name: Notify Failure
        if: ${{ needs.build-android.result == 'failure' || needs.build-ios.result == 'failure' || needs.build-web.result == 'failure' || needs.build-desktop.result == 'failure' }}
        run: |
          echo "❌ Some builds failed!"
          echo "- Android: ${{ needs.build-android.result }}"
          echo "- iOS: ${{ needs.build-ios.result }}"
          echo "- Web: ${{ needs.build-web.result }}"
          echo "- Desktop: ${{ needs.build-desktop.result }}"
