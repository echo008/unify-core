name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2 -Dorg.gradle.jvmargs="-Xmx4g -XX:MaxMetaspaceSize=1g"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true

      - name: Cache Kotlin/JS dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            kotlin-js-store
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Kotlin linting
        run: ./gradlew ktlintCheck --stacktrace

      - name: Run tests
        run: ./gradlew test --stacktrace --continue

      - name: Generate test report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Results
          path: '**/build/test-results/test/TEST-*.xml'
          reporter: java-junit

  build:
    name: Build All Platforms
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 45

    strategy:
      matrix:
        target: [android, web, desktop]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build shared module
        run: ./gradlew :shared:assemble --stacktrace

      - name: Build Android
        if: matrix.target == 'android'
        run: ./gradlew :androidApp:assembleDebug --stacktrace

      - name: Build Web
        if: matrix.target == 'web'
        run: ./gradlew :webApp:jsBrowserDevelopmentWebpack --stacktrace

      - name: Build Desktop
        if: matrix.target == 'desktop'
        run: ./gradlew :desktopApp:packageUberJarForCurrentOS --stacktrace

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: build-artifacts-${{ matrix.target }}
          path: |
            androidApp/build/outputs/apk/debug/*.apk
            webApp/build/dist/js/productionExecutable/
            desktopApp/build/compose/jars/*.jar
          retention-days: 7

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run dependency vulnerability scan
        uses: ossf/scorecard-action@v2.3.1
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Run detekt
        run: ./gradlew detekt --stacktrace

      - name: Generate test coverage
        run: ./gradlew koverHtmlReport --stacktrace

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./build/reports/kover/html/index.html
          fail_ci_if_error: false
